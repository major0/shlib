#!/usr/bin/env shlib

# Based on a bash map() function by Reddit user downdiagonal
# http://www.reddit.com/r/bashtricks/comments/aks3u/a_functional_programming_style_map_function_for/
# Re-written to work w/ shlib arrays such that we can have quoted spaces and
# escapes on the command and item side of the mapping.

import string.regexp
import array

__shlib_map()
{
        if test $# -lt 2 || ! string.regexp '.*:$' "$@"; then
                shlib.error "Invalid syntax."
		return 1
        fi

	__shlib_map_cmd=
        until string.regexp '.*:$' "${1}"; do
		__shlib_map_cmd="$(array.append "${__shlib_map_cmd}" "${1}")"
		shift
        done
	__shlib_map_cmd="$(array.append "${__shlib_map_cmd}" "${1%:}")"
	shift

	__shlib_map_items="$(array "${@}")"
	while __shlib_map_item="$(array.head "${__shlib_map_items}")"; do
		__shlib_map_items="$(array.shift "${__shlib_map_items}")"
		eval set -- "${__shlib_map_cmd}" "\"${__shlib_map_item}\""
		"${@}"
	done
	unset __shlib_map_items
	unset __shlib_map_item
	unset __shlib_map_cmd
}
alias shlib.map='__shlib_map '

shlib.main {
	for arg; do
		case "${arg}" in (-h|-help|--help)
			echo 'usage: map <command> [<arg>]: <item> ...'
			exit 0
		esac
	done
	__shlib_map "${@}"
}

# vim: filetype=sh
