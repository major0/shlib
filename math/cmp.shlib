#!/usr/bin/env shlib

if test "${SHLIB_SHELL}" = 'ksh' || test "${SHLIB_SHELL}" = 'zsh'; then
	__shlib_math_cmp_cmd() { set +e;(($*)); set -e; }
elif shlib.hascmd awk; then
	__shlib_math_cmp_cmd() { awk "BEGIN{ if ($*) { exit 0;} else { exit 1;} }"; }
elif shlib.hascmd ksh; then
	__shlib_math_cmp_cmd() { ksh -c "(($*))"; }
elif shlib.hascmd zsh; then
	__shlib_math_cmp_cmd() { zsh -c "(($*))"; }
else
	shlib.error 'no suitable method for float equality'
	return 1
fi

__shlib_math_cmp()
{
	while test "$#" -gt '0'; do
		case "${1}" in
		(--)	shift; break;;
		(*)	break;;
		esac
	done

	if test "$#" -lt '1'; then
		shlib.usage 'math.cmp' 'too few arguments'
		return 1
	fi

	__shlib_math_cmp_cmd "${@}"
}
alias math.cmp='__shlib_math_cmp '

shlib.main {
	for arg; do
		case "${arg}" in (-h|-help|--help) shlib.doc 'math.cmp';; esac
	done
	__shlib_math_cmp "${@}"
}

shlib.test {
	test.fail 'allowed empty argument list' __shlib_math_cmp
	#test.fail 'allowed bad argument list' __shlib_math_cmp '1 2 3'
	test.exec __shlib_math_cmp '1'
	test.pass 'basic comparison' __shlib_math_cmp '1 == 1'
	test.pass 'floating-point comparison' __shlib_math_cmp '0 == 0.0'
	test.benchmark __shlib_math_cmp '1 == 1.00000000000000'
	test.done
}

# vim: filetype=sh
