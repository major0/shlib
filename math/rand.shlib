#!/usr/bin/env shlib

if test "${SHLIB_SHELL}" = 'ksh' && shlib.hasfunc .sh.math.rand; then
	__shlib_math_rand_cmd() { echo "$((rand($*)))"; }
elif test "${SHLIB_SHELL}" = 'zsh'; then
	__shlib_math_rand_cmd() { set -- "$((rand($*)))"; echo "${1%.}"; }
elif shlib.hascmd 'gawk'; then
	__shlib_math_rand_cmd() { command gawk "BEGIN{ print rand($*); }"; }
elif shlib.hascmd 'awk'; then
	__shlib_math_rand_cmd() { command awk "BEGIN{ print rand($*); }"; }
elif shlib.hascmd 'ksh' && ksh -c 'whence -t .sh.math.rand' > /dev/null 2>&1; then
	__shlib_math_rand_cmd() { command ksh -c "echo \$((rand($*)))"; }
elif shlib.hascmd 'zsh'; then
	__shlib_math_rand_cmd() { command zsh -c "result=\$((rand($*)));echo \${result%.}"; }
else
	shlib.error 'no suitable method for doing rand'
	return 1
fi

__shlib_math_rand()
{
	while test "$#" -gt '0'; do
		case "${1}" in
		(--)	shift; break;;
		(*)	break;;
		esac
	done

	if test "$#" -lt '0'; then
		shlib.usage 'math.rand' 'too few arguments'
		return 1
	fi

	if test "$#" -gt '0'; then
		shlib.usage 'math.rand' 'too many arguments'
		return 1
	fi

	__shlib_math_rand_cmd "${@}"
}
alias math.rand='__shlib_math_rand '

shlib.main {
	for arg; do
		case "${arg}" in (-h|-help|--help) shlib.doc 'math.rand';; esac
	done
	__shlib_math_rand "${@}"
}

# vim: filetype=sh
