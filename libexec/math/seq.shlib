#!/usr/bin/env shlib

import math.cmp
import math.calc

if hascmd seq; then
	__shlib_math_seq_cmd() { command seq "${@}"; }
else
	__shlib_math_seq_float()
	{
		set -- "${2#*.}" "${@}"
		set -- "${@}" "${#1}"
		shift
		while true; do
			if math.cmp "${2} > 0"; then
				math.cmp "${1} <= ${3}" || break
			else
				math.cmp "${1} >= ${3}" || break
			fi
			printf "%0.0${4}f\n" "${1}"
			set -- "$(math.calc "${1} + ${2}")" "${2}" "${3}" "${4}"
			math.cmp "${2} != 0" || break
		done
	}

	__shlib_math_seq_int()
	{
		while true; do
			if test "${2}" -gt '0'; then
				test "${1}" -le "${3}" || break
			else
				test "${1}" -ge "${3}" || break
			fi
			echo "${1}"
			set -- "$((${1} + ${2}))" "${2}" "${3}"
			test "${2}" -ne '0' || break
		done
	}
	__shlib_math_seq_cmd() {
		test "$#" -eq 1 && set -- 1 "${1}"
		test "$#" -eq 2 && set -- "${1}" 1 "${2}"
		case "${1}|${2}|${3}" in
		(*.*)	__shlib_math_seq_float "${@}";;
		(*)	__shlib_math_seq_int "${@}";;
		esac
	}
fi

__shlib_math_seq()
{
	while test "$#" -gt '0'; do
		case "${1}" in
		(--)	shift; break;;
		(*)	break;;
		esac
	done

	! test "$#" -lt '1' || shlib.usage 'math.seq' 'too few arguments'
	! test "$#" -gt '3' || shlib.usage 'math.seq' 'too many arguments'

	__shlib_math_seq_cmd "$@"
}
alias math.seq='__shlib_math_seq '

shlib.main {
	for arg; do
		case "${arg}" in (-h|-help|--help) shlib.doc 'math.seq';; esac
	done
	__shlib_math_seq "${@}"
}


# vim: filetype=sh
