#!/usr/bin/env shlib

if shlib.hascmd awk; then
	__shlib_string_sub_cmd() {
		awk "{ sub(\"$1\", \"$2\"); print(\$0); }" <<EOF
$3
EOF
	}
else
	shlib.error 'no way to implement sub'
	return 1
fi

__shlib_string_sub()
{
	while test "$#" -gt '0'; do
		case "${1}" in
		(--)	shift; break;;
		(-*)	shlib.usage 'string.sub' "unknown option '${1}'"
			return 1;;
		(*)	break;;
		esac
	done

	if test "$#" -lt '3'; then
		shlib.usage 'string.sub' 'too few arguments'
		return 1
	fi

	if test "$#" -gt '3'; then
		shlib.usage 'string.sub' 'too many arguments'
		return 1
	fi

	__shlib_string_sub_cmd "$@"
}
alias string.sub='__shlib_string_sub '

shlib.main {
	for arg; do
		case "${arg}" in (-h|-help|--help) string.doc 'string.sub';; esac
	done
	__shlib_string_sub "${1}" "${2}"
}

# vim: filetype=sh
